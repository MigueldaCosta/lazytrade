% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/aml_test_model.R
\name{aml_test_model}
\alias{aml_test_model}
\title{Function to test the model and conditionally decide to update existing model for a single currency pair}
\usage{
aml_test_model(symbol, num_bars, timeframe, path_model, path_data)
}
\arguments{
\item{symbol}{Character symbol of the asset for which to train the model}

\item{num_bars}{Number of bars used to detect pattern}

\item{timeframe}{Data timeframe e.g. 1 min}

\item{path_model}{Path where the models are be stored}

\item{path_data}{Path where the aggregated historical data is stored, if exists in rds format}
}
\value{
Function is writing file into Decision Support System folder
}
\description{
Function is designed to test of the trading decision based on the deep learning regression model.
The outcome of this function will be used to perform update of existing model with a fresh data.
}
\details{
Function is reading shifted price data and corresponding indicator.
Starting from the trained model function will test the trading strategy using simplified trading approach.
Trading approach will entail using the last available indicator data, predict the price change for every row,
verify obtained results on the available data after defined period of time (75 bars).
Obtained virtual win/loss is consolidated to calculate profit factor.
Whenever profit factor value is less than 1.1 function is writing dedicated decision using simple *.csv file
Such file will be used in the production script MakeModelMxx.R see repository R_selflearning
}
\examples{

\donttest{

# start h2o engine (using all CPU's by default)
library(tidyverse)
library(h2o)

path_model <- normalizePath(tempdir(),winslash = "/")
#path_model <- "C:/Users/fxtrams/Documents/000_TradingRepo/R_selflearning/_MODELS"
path_data <- normalizePath(tempdir(),winslash = "/")
#path_data <- "C:/Users/fxtrams/Documents/000_TradingRepo/R_selflearning/_DATA"
data(EURUSDM15X75)
write_rds(EURUSDM15X75, file.path(path_data, 'EURUSDM15X75.rds'))

h2o.init()

# performing Deep Learning Regression using the custom function
aml_test_model(symbol = 'EURUSD',
               num_bars = 75,
               timeframe = 15,
               path_model = path_model,
               path_data = path_data)

# stop h2o engine
h2o.shutdown(prompt = F)

}



}
\author{
(C) 2019 Vladimir Zhbanko
}
