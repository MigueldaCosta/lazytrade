% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/aml_score_data.R
\name{aml_score_data}
\alias{aml_score_data}
\title{Function to read new data, transform data, predict change, save data for further retraining of regression model for a single currency pair}
\usage{
aml_score_data(price_dataset, indicator_dataset, symbol, num_bars,
  timeframe, path_model, path_data, setup_mode = FALSE,
  research_mode = FALSE, write_log = TRUE)
}
\arguments{
\item{price_dataset}{Dataset containing assets prices. It will be used as a label}

\item{indicator_dataset}{Dataset containing assets indicator which pattern will be used as predictor}

\item{symbol}{Character symbol of the asset for which to train the model}

\item{num_bars}{Number of bars used to detect pattern}

\item{timeframe}{Data timeframe e.g. 1 min}

\item{path_model}{Path where the models are be stored}

\item{path_data}{Path where the aggregated historical data is stored, if exists in rds format}

\item{setup_mode}{When TRUE function will attempt to write model to the disk without checking it}

\item{research_mode}{When TRUE model will be saved and model result will be stored as well. To be used at the first run.}

\item{write_log}{Writes results of the newly trained model and previously used model to the file}
}
\value{
Function is writing files into Decision Support System folder, mainly file object with the model
}
\description{
Function is collecting data from the financial assets and match future prices of the asset to the indicator pattern.
Once the data is collected and transformed it would be written to new or aggregated to the existing file
}
\details{
Performs fresh data reading from the file, transposes the data. Function is handling shift of the price and indicator datasets.
Add new data to the previously collected data.
NOTE: Always run parameter research_mode = TRUE for the first time

Because of the function is intended to periodically re-train the model it would always check how the previous model was working.
In case new model is better, the better model will be used.

Function can also write a log files with a results of the strategy test
}
\examples{

\donttest{

# start h2o engine (using all CPU's by default)
library(tidyverse)
library(h2o)

data(price_dataset)
data(indicator_dataset)

path_model <- normalizePath(tempdir(),winslash = "/")
path_data <- normalizePath(tempdir(),winslash = "/")

h2o.init()

# performing Deep Learning Regression using the custom function
generate_regr_model(price_dataset = price_dataset,
                    indicator_dataset = indicator_dataset,
                    symbol = 'EURUSD',
                    num_bars = 75,
                    timeframe = 1,
                    path_model = path_model,
                    path_data = path_data,
                    setup_mode = FALSE,
                    write_log = TRUE)

# stop h2o engine
h2o.shutdown(prompt = F)

}



}
\author{
(C) 2019 Vladimir Zhbanko
}
