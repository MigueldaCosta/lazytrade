% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/aml_make_model.R
\name{aml_make_model}
\alias{aml_make_model}
\title{Function to train Deep Learning regression model for a single currency pair}
\usage{
aml_make_model(symbol, num_bars, timeframe, path_model, path_data)
}
\arguments{
\item{symbol}{Character symbol of the asset for which to train the model}

\item{num_bars}{Number of bars used to detect pattern}

\item{timeframe}{Data timeframe e.g. 1 min}

\item{path_model}{Path where the models are be stored}

\item{path_data}{Path where the aggregated historical data is stored, if exists in rds format}

\item{price_dataset}{Dataset containing assets prices. It will be used as a label}

\item{indicator_dataset}{Dataset containing assets indicator which pattern will be used as predictor}

\item{research_mode}{When TRUE model will be saved and model result will be stored as well. To be used at the first run.}

\item{write_log}{Writes results of the newly trained model and previously used model to the file}

\item{setup_mode}{When TRUE function will attempt to write model to the disk without checking it}
}
\value{
Function is writing files into Decision Support System folder, mainly file object with the model
}
\description{
Function is training h2o deep learning model to match future prices of the asset to the indicator pattern.
Main idea is to be able to predict future prices by solely relying on the most recent indicator pattern.
}
\details{
Performs data manipulation and training of the model. Function is using the dataset prepared by the function aml_collect_data.R.
Function will also check how the model predict by using trading objective.

Function will start to train the model as soon as there are more than 100 rows in the dataset

Because of the function is intended to periodically re-train the model it would always check how the previous model was working.
In case new model is better, the better model will be used.
}
\examples{

\donttest{

# start h2o engine (using all CPU's by default)
library(tidyverse)
library(h2o)




path_model <- normalizePath(tempdir(),winslash = "/")
path_data <- normalizePath(tempdir(),winslash = "/")

h2o.init()

# performing Deep Learning Regression using the custom function
aml_make_model(symbol = 'EURUSD',
               num_bars = 75,
               timeframe = 15,
               path_model = path_model,
               path_data = path_data)

# stop h2o engine
h2o.shutdown(prompt = F)

}



}
\author{
(C) 2019 Vladimir Zhbanko
}
